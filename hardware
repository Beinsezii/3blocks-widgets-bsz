#! /usr/bin/env bash

RATE=${RATE:-"1.0"}
THERMAL_FLOOR=${THERMAL_FLOOR:-25}
GPU=${GPU:-true}
GPU_ID=${GPU_ID:-0}
GPU_THERMALS=${GPU_THERMALS:-true}
SEPARATOR=${SEPARATOR:-"]["}
SEPARATOR_SHORT=${SEPARATOR_SHORT:-" "}
SEPARATOR_THERMAL=${SEPARATOR_THERMAL:-" Â°"}
PREFIX=${PREFIX:-"["}
SUFFIX=${SUFFIX:-"]"}
PREFIX_SHORT=${PREFIX_SHORT:-""}
SUFFIX_SHORT=${SUFFIX_SHORT:-""}

# 100 steps, LCH 60, 75, 30..210
# converted to hex using crates.io/crates/colcon
### HEATCOLORS ### {{{
HEATCOLORS=(

"#00ADD1"
"#00ADCD"
"#00ADC9"
"#00ADC5"
"#00AEC2"
"#00AEBE"
"#00AEBA"
"#00AEB6"
"#00AEB2"
"#00AEAE"
"#00AEAA"
"#00AEA6"
"#00AEA2"
"#00AE9D"
"#00AD99"
"#00AD95"
"#00AD91"
"#00AD8D"
"#00AD89"
"#00AD84"
"#00AD80"
"#00AC7C"
"#00AC78"
"#00AC74"
"#00AC70"
"#00AC6B"
"#00AB67"
"#00AB63"
"#00AB5F"
"#00AA5B"
"#00AA57"
"#00AA53"
"#00A94F"
"#00A94B"
"#00A947"
"#00A842"
"#00A83E"
"#00A73A"
"#10A736"
"#22A632"
"#2DA62D"
"#36A529"
"#3EA524"
"#45A41F"
"#4CA31A"
"#52A314"
"#57A20D"
"#5DA104"
"#62A100"
"#67A000"
"#6B9F00"
"#709E00"
"#749D00"
"#799C00"
"#7D9C00"
"#819B00"
"#859A00"
"#899900"
"#8D9800"
"#919700"
"#959500"
"#999400"
"#9D9300"
"#A09200"
"#A49100"
"#A78F00"
"#AB8E00"
"#AE8D00"
"#B28B00"
"#B58A00"
"#B98900"
"#BC8700"
"#BF8600"
"#C28400"
"#C58200"
"#C88100"
"#CB7F00"
"#CE7E00"
"#D17C00"
"#D47A00"
"#D77800"
"#DA7700"
"#DC7504"
"#DF730C"
"#E17112"
"#E46F18"
"#E66D1D"
"#E96B21"
"#EB6925"
"#ED6729"
"#EF652D"
"#F16431"
"#F36235"
"#F56038"
"#F65E3C"
"#F85C40"
"#FA5A43"
"#FB5847"
"#FC564B"
"#FE544F"

)
### HEATCOLORS ### }}}

# $1 percent (index)
function heatmap {
    count=${#HEATCOLORS[@]}
    count=$count-1
    last=${HEATCOLORS[$count]}
    unset ${HEATCOLORS[$count]}
    scale=$((100 / count))
    x=0
    for c in ${HEATCOLORS[@]}; do
        if [ $1 -lt $((scale * x)) ]; then
            echo -n " color=\"$c\""
            return
        fi
        x=$x+1
    done
    echo -n " color=\"$last\""
}


# $1 card $2 hwmon $3 temp
function gputherm {
    awk '
    {
        floor='$THERMAL_FLOOR'
        current=$1 / 1000;
        getline;
        critical=$1 / 1000;
        printf "%d %d", current, ((current - floor) / (critical - floor) ) * 100
    }
    ' /sys/class/drm/card${1}/device/hwmon/hwmon${2}/temp${3}_input /sys/class/drm/card${1}/device/hwmon/hwmon${2}/temp${3}_crit
}


output_long=""
output_short=""


### GPU ### {{{
if $GPU; then

    gpu_util=$(cat /sys/class/drm/card$GPU_ID/device/gpu_busy_percent)

    read vram_used vram_total vram_percent <<< $( awk '
    {
        used=$1;
        getline;
        total=$1;
        printf "%.1f %.1f %.1f", used/1024/1024/1024, total/1024/1024/1024, used/total*100
    }' /sys/class/drm/card$GPU_ID/device/mem_info_vram_used /sys/class/drm/card$GPU_ID/device/mem_info_vram_total )

    gpu_color=$(heatmap ${gpu_util%.*})
    vram_color=$(heatmap ${vram_percent%.*})

    if $GPU_THERMALS; then

        read core core_percent <<< `gputherm $GPU_ID 0 1`
        read junc junc_percent <<< `gputherm $GPU_ID 0 2`
        read mem mem_percent <<< `gputherm $GPU_ID 0 3`

        die="$SEPARATOR_THERMAL<span$(heatmap ${core_percent})>$core</span>/<span$(heatmap ${junc_percent})>$junc</span>"
        memchip="$SEPARATOR_THERMAL<span$(heatmap ${mem_percent})>$mem</span>"

    fi



    output_long+="3D: <span$gpu_color>$gpu_util%</span>$die${SEPARATOR}VRAM: <span$vram_color>$vram_used / $vram_total</span>$memchip$SEPARATOR"
    output_short+="3D: <span$gpu_color>$gpu_util%</span>$die${SEPARATOR_SHORT}VRAM: <span$vram_color>$vram_percent%</span>$memchip$SEPARATOR_SHORT"

fi
### GPU ### }}}


### MEM ### {{{
read mem_used mem_total mem_percent <<< $(awk '
/MemTotal:/ {total = $2/1024/1024}
/MemAvailable:/ {
    used = total-$2/1024/1024;
    printf "%.1f %.1f %.1f", used, total, used/total*100
}' /proc/meminfo)

mem_color=$(heatmap ${mem_percent%.*})
output_long+="MEM: <span$mem_color>$mem_used / $mem_total</span>$SEPARATOR"
output_short+="MEM: <span$mem_color>$mem_percent%</span>$SEPARATOR_SHORT"
### MEM ### }}}


### CPU ### {{{
read cpu_util cores <<< $(awk '
/cpu / {
    if (iter==1) {
        used_base=used
        idle_base=idle
        total_base=total
    };
    used=$2+$3+$4
    idle=$5
    total=used+idle
    iter=1
}
END {
    cores=(NR-2)/2
    printf "%.1f %d", (used - used_base) / (total-total_base) * 100 * cores, cores
}
' <(grep 'cpu' /proc/stat) <(sleep $RATE; grep 'cpu' /proc/stat))

cpu_color=$(heatmap $((${cpu_util%.*} / cores )))
output_long+="CPU: <span$cpu_color>$cpu_util%</span>"
output_short+="CPU: <span$cpu_color>$cpu_util%</span>"
### CPU ### }}}

echo $PREFIX$output_long$SUFFIX
echo $PREFIX_SHORT$output_short$SUFFIX_SHORT
exit 0
